name: foodgram workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          cd backend/
          python3 -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return
          pip install -r requirements.txt
      - name: flake8 tests
        run: |
          cd backend/
          python3 -m flake8
  build_and_push_to_dockerhub:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}
      - name: Push backend to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          push: true
          tags: plonkton/foodgram_backend:v1
      - name: Push frontend to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: plonkton/foodgram_frontend:v1
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_dockerhub
    steps:
      - name: ssh connect to server and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.SERVER_HOST}}
          username: ${{secrets.SERVER_USER}}
          key: ${{secrets.SSH_KEY}}
          passphrase: ${{secrets.SERVER_PASSPHRASE}}
          script: |
            sudo docker pull plonkton/foodgram_backend:v1
            sudo docker pull plonkton/foodgram_frontend:v1
            cd foodgram-project-react/infra/
            sudo docker-compose stop
            sudo docker-compose rm -f backend frontend
            touch ../.env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> ../.env
            echo DB_NAME=${{ secrets.DB_NAME }} >> ../.env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> ../.env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> ../.env
            echo DB_HOST=${{ secrets.DB_HOST }} >> ../.env
            echo DB_PORT=${{ secrets.DB_PORT }} >> ../.env
            sudo docker-compose up -d